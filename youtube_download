import streamlit as st
import yt_dlp
import os
import tempfile

# Load custom CSS
def load_css(file_name):
    with open(file_name, "r") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# Load styles.css
load_css("yt1.css")

# Get default Downloads folder
default_download_path = os.path.join(os.path.expanduser("~"), "Downloads")


def download_playlist(url, resolution):
    temp_dir = tempfile.mkdtemp()  # Create temporary directory
    output_path = os.path.join(temp_dir, "%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s")

    ydl_opts = {
        "format": f"bv*[height={resolution}]+ba/best",
        "merge_output_format": "mp4",
        "outtmpl": output_path,
        "noplaylist": False,
        "retries": 10,
        "fragment_retries": 10,
        "continue": True,
        "ignoreerrors": True,
        "buffersize": 16 * 1024,
        "postprocessors": [{"key": "FFmpegVideoConvertor", "preferedformat": "mp4"}],
    }

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=True)
        video_filename = ydl.prepare_filename(info)
        return video_filename


# 🎨 Streamlit UI
st.title("🎥 YouTube Playlist Downloader 🚀")
st.subheader("📥 Download your favorite YouTube playlists in any resolution!")

# 🎯 User Inputs
playlist_url = st.text_input("🔗 Enter YouTube Playlist URL:")
resolution = st.selectbox(
    "🎚️ Select Video Resolution:",
    ["144", "240", "360", "480", "720", "1080", "1440", "2160"],
    index=4
)

# ✅ Download Button
if st.button("🚀 Start Download"):
    if playlist_url:
        st.write(f"⏳ Downloading in **{resolution}p** resolution... Please wait! 🎬")
        try:
            video_file = download_playlist(playlist_url, resolution)
            st.success("✅ Download complete! Click below to save it.")

            with open(video_file, "rb") as f:
                st.download_button(
                    label="📥 Download Video",
                    data=f,
                    file_name=os.path.basename(video_file),
                    mime="video/mp4"
                )
        except Exception as e:
            st.error(f"❌ Error: {e}")
    else:
        st.error("❌ Please enter a valid YouTube Playlist URL! 🔗")

# 📌 Footer
st.markdown("📢 **Tip:** Higher resolutions (1080p+) may take longer to download. 🚀")
